- name: Enable nonlocal IP binding
  blockinfile:
    path: /etc/sysctl.conf
    block: |
      net.ipv4.ip_nonlocal_bind=1
      net.ipv4.ip_forward = 1
  notify: Reload sysctl config

- name: Flush handlers
  meta: flush_handlers

- name: Install keepalived Debian
  ansible.builtin.apt:
    pkg:
      - keepalived
    force_apt_get: true
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Install keepalived Rocky
  yum:
    name:
      - kernel-headers
      - kernel-devel
      - keepalived
      - policycoreutils-python-utils
      - python3-pip
    state: present
  when: ansible_distribution == 'Rocky' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Change the keepalived_t domain to permissive
  community.general.selinux_permissive:
    name: keepalived_t
    permissive: true
  when: ansible_distribution == 'Rocky' or ansible_distribution == 'Red Hat Enterprise Linux'

# Since yum doesn't like using notify because yum we have to this instead
- name: Start service keepalived started, if not started
  ansible.builtin.service:
    name: keepalived
    state: stopped
    enabled: true
  when: ansible_distribution == 'Rocky' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Copy check_pihole.sh
  copy:
    dest: /etc/keepalived/check_pihole.sh
    src: check_pihole.sh
    mode: 0755

# Finds the IP_ADDRS of the group and removes the ansible_host ip's from it's peer list
- name: Find Local IP Addresses
  set_fact:
    local_ips: "{{ ansible_all_ipv4_addresses + ansible_all_ipv6_addresses }}"

- name: Create a list of peer IPs excluding local IPs and ensure /24 suffix
  set_fact:
    peer_list: >-
      {{ groups['all'] 
         | map('extract', hostvars, 'ansible_host') 
         | difference(local_ips) 
         | map('regex_replace', '^(.*?)(/\\d+)?$', '\g<1>/24') 
         | list }}

# Step 3: Debug the peer_list
- name: Debug peer_list
  debug:
    msg: "Peer IPs with /24 for host {{ inventory_hostname }}: {{ peer_list }}"

- name: Configure keepalived
  template:
    dest: /tmp/keepalived.conf
    src: keepalived.j2
    mode: 0644
  notify: Restart keepalived service

- name: Remove ansible junk from config file for keepalive
  ansible.builtin.shell: cat /tmp/keepalived.conf | sed 's/[][]//g' | sed "s/['\]//g" > /etc/keepalived/keepalived.conf

#Fixes issues with eth0 being used for the vagrant vm access interfering with the code pick up of the primary interface
- name: vagrant test env support
  ansible.builtin.replace:
    path: /etc/keepalived/keepalived.conf
    regexp: 'eth0'
    replace: 'eth1'
  when: vagrant_env == true and ansible_distribution == 'Rocky' or ansible_distribution == 'Red Hat Enterprise Linux'

### Add in firewall rules for vrrp protocol
- name: Add VRRP protocol to firewall
  ansible.posix.firewalld:
    rich_rule: rule protocol value="vrrp" accept
    permanent: true
    state: enabled
  notify: Restart firewall config

- name: Flush handlers
  meta: flush_handlers
