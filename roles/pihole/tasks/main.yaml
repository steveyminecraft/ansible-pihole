- name: Create pihole directory
  file:
    path: "/home/{{ ansible_user }}/pihole"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: directory
    mode: 0755

- name: Get IPv6 link local address
  set_fact:
    ipv6: "{{ item.address }}"
  loop: "{{ vars['ansible_' + ansible_default_ipv6.interface | default(ansible_default_ipv4.interface)].ipv6 }}"
  loop_control:
    label: "{{ item.address }}"
  when: "'link' in item.scope"

- name: Determine Pi-hole host IPs (HA mode)
  set_fact:
    pihole_local_ipv4: "{{ pihole_vip_ipv4.split('/')[0] }}"
    pihole_local_ipv6: "{{ pihole_vip_ipv6.split('/')[0] }}"
    execution_mode: "HA setup with keepalived"
  when: pihole_ha_mode == true

- name: Determine Pi-hole host IPs (single mode)
  set_fact:
    pihole_local_ipv4: "{{ ansible_host }}"
    pihole_local_ipv6: "{{ ipv6 }}"
    execution_mode: "single node setup"
  when: pihole_ha_mode == false

- name: Start/Update pihole container
  docker_container:
    name: "{{ pihole_container_name }}"
    image: "{{ pihole_image }}"
    pull: true
    restart_policy: unless-stopped
    env:
      TZ: "{{ timezone }}"
      WEBPASSWORD: "{{ pihole_webpassword }}"
      PIHOLE_DNS_: "{{ pihole_dns }}"
      DNSMASQ_LISTENING: "{{ dnsmasq_listening }}"
      REV_SERVER: "{{ pihole_rev_server }}"
      REV_SERVER_DOMAIN: "{{ pihole_rev_server_domain }}"
      REV_SERVER_TARGET: "{{ pihole_rev_server_target }}"
      REV_SERVER_CIDR: "{{ pihole_rev_server_cidr }}"
      FTLCONF_MAXDBDAYS: "{{ pihole_ftl_max_db_days }}"
    dns_servers:
      - 127.0.0.1
      - "{{ static_dns }}"
    network_mode: host
    volumes:
      - "/home/{{ ansible_user }}/pihole/pihole/:/etc/pihole/"
      - "/home/{{ ansible_user }}/pihole/dnsmasq.d/:/etc/dnsmasq.d/"
    log_driver: json-file
    log_options:
      max-size: "10m"
      max-file: "5"

- name: Stop and disable resolver
  ansible.builtin.service:
    name: systemd-resolved
    state: stopped
    enabled: false
  when: ansible_distribution == 'Ubuntu'

- block:
  - name: Adding DNS service for firewalld
    copy:
      src: dns.xml
      dest: /etc/firewalld/services/dns.xml
      owner: root
      group: root

  - name: Default firewalld rules
    ansible.posix.firewalld:
      service: "{{ item }}"
      state: enabled
      permanent: true
      immediate: true
      zone: public
    with_items:
      - http
      - https
      - dns
  when: ansible_distribution == 'Rocky' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Bootps firewalld rule
  ansible.posix.firewalld:
    service: "{{ item }}"
    state: enabled
    permanent: true
    immediate: true
    zone: public
  with_items:
    - bootps
  when: pihole_rev_server == true

- name: Check pihole container
  uri:
    url: http://localhost/admin
  register: result
  until: result.status == 200
  retries: 5
  delay: 10

- name: Remove old image versions
  docker_prune:
    images: true
    images_filters:
      dangling: false

- name: INFORMATION
  debug:
    msg:
      - "In the {{ execution_mode }} make sure to point your DNS server settings here:"
      - "DNSv4: {{ pihole_local_ipv4 }}"
      - "DNSv6: {{ pihole_local_ipv6 }}"
