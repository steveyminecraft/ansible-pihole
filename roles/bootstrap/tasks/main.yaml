- name: Add ssh key
  ansible.posix.authorized_key:
    key: https://github.com/{{ github_user_for_ssh_key }}.keys
    user: "{{ ansible_user }}"
    comment: "github-{{ github_user_for_ssh_key }}"

- name: "Lock password for {{ ansible_user }}"
  user:
    name: "{{ ansible_user }}"
    password_lock: true
  when: password_lock == true

- name: "Bashrc for {{ ansible_user }}"
  blockinfile:
    path: "{{ ansible_user_home_dir }}/.bashrc"
    block: alias ll='ls -la'

- name: Bashrc for "{{ ansible_user }}"
  blockinfile:
    path: "{{ ansible_user_home_dir }}/.bashrc"
    block: |
      export LS_OPTIONS='--color=auto'
      eval "`dircolors`"
      alias ls='ls $LS_OPTIONS'
      alias ll='ls $LS_OPTIONS -la'
      alias l='ls $LS_OPTIONS -lA'

      if ! shopt -oq posix; then
        if [ -f /usr/share/bash-completion/bash_completion ]; then
          . /usr/share/bash-completion/bash_completion
        elif [ -f /etc/bash_completion ]; then
          . /etc/bash_completion
        fi
      fi

- name: Set timezone
  lineinfile:
    path: /etc/timezone
    regexp: "^"
    line: "{{ timezone }}"
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Set localtime
  file:
    src: /usr/share/zoneinfo/{{ timezone }}
    dest: /etc/localtime
    state: link
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: "Set timezone to {{ timezone }}"
  community.general.timezone:
    name: "{{ timezone }}"

- name: Set a hostname
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"
    use: systemd

- name: Set hostname
  lineinfile:
    path: /etc/hostname
    regexp: "^"
    line: "{{ inventory_hostname }}"
  notify: Reboot after hostname change
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Set hosts
  lineinfile:
    path: /etc/hosts
    regexp: "^127.0.1.1"
    line: 127.0.1.1       {{ inventory_hostname }}
  notify: Reboot after hostname change

- name: Set custom DNS servers
  blockinfile:
    path: /etc/dhcpcd.conf
    block: static domain_name_servers={{ static_dns }}
  notify: Restart dhcpcd
  when: ansible_distribution == 'Debian'and ansible_architecture == 'aarch64'

- name: Install requirements Debian
  ansible.builtin.apt:
    pkg:
    - firewalld
    - python3-pip
    update_cache: true
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Install keepalived Rocky
  ansible.builtin.dnf:
    name:
      - python3-pip
      - bind-utils
    state: present
  when: ansible_distribution == 'Rocky' or ansible_distribution == 'Red Hat Enterprise Linux'


- name: Flush handlers
  meta: flush_handlers
